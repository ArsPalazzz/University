//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CourseProject
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Entities1 : DbContext
    {
        public Entities1()
            : base("name=Entities1")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<CLIENT> CLIENT { get; set; }
        public virtual DbSet<COMMENTS> COMMENTS { get; set; }
        public virtual DbSet<GENRE> GENRE { get; set; }
        public virtual DbSet<HUGEAMOUNTROWS> HUGEAMOUNTROWS { get; set; }
        public virtual DbSet<ORDER_CARD> ORDER_CARD { get; set; }
        public virtual DbSet<ORDER_CARD_DETAILS> ORDER_CARD_DETAILS { get; set; }
        public virtual DbSet<RECORD> RECORD { get; set; }
        public virtual DbSet<SONG> SONG { get; set; }
    
        public virtual int ADD_NEW_RECORD(Nullable<decimal> p_YEAR, Nullable<decimal> p_COST, Nullable<decimal> p_AMOUNT, Nullable<decimal> p_SUPPLIER_ID, string p_DESCRIPTION, string p_ARTIST_NAME, string p_ALBUM_NAME, string p_PICTURE, string p_STATUS, Nullable<System.DateTime> p_DATE)
        {
            var p_YEARParameter = p_YEAR.HasValue ?
                new ObjectParameter("P_YEAR", p_YEAR) :
                new ObjectParameter("P_YEAR", typeof(decimal));
    
            var p_COSTParameter = p_COST.HasValue ?
                new ObjectParameter("P_COST", p_COST) :
                new ObjectParameter("P_COST", typeof(decimal));
    
            var p_AMOUNTParameter = p_AMOUNT.HasValue ?
                new ObjectParameter("P_AMOUNT", p_AMOUNT) :
                new ObjectParameter("P_AMOUNT", typeof(decimal));
    
            var p_SUPPLIER_IDParameter = p_SUPPLIER_ID.HasValue ?
                new ObjectParameter("P_SUPPLIER_ID", p_SUPPLIER_ID) :
                new ObjectParameter("P_SUPPLIER_ID", typeof(decimal));
    
            var p_DESCRIPTIONParameter = p_DESCRIPTION != null ?
                new ObjectParameter("P_DESCRIPTION", p_DESCRIPTION) :
                new ObjectParameter("P_DESCRIPTION", typeof(string));
    
            var p_ARTIST_NAMEParameter = p_ARTIST_NAME != null ?
                new ObjectParameter("P_ARTIST_NAME", p_ARTIST_NAME) :
                new ObjectParameter("P_ARTIST_NAME", typeof(string));
    
            var p_ALBUM_NAMEParameter = p_ALBUM_NAME != null ?
                new ObjectParameter("P_ALBUM_NAME", p_ALBUM_NAME) :
                new ObjectParameter("P_ALBUM_NAME", typeof(string));
    
            var p_PICTUREParameter = p_PICTURE != null ?
                new ObjectParameter("P_PICTURE", p_PICTURE) :
                new ObjectParameter("P_PICTURE", typeof(string));
    
            var p_STATUSParameter = p_STATUS != null ?
                new ObjectParameter("P_STATUS", p_STATUS) :
                new ObjectParameter("P_STATUS", typeof(string));
    
            var p_DATEParameter = p_DATE.HasValue ?
                new ObjectParameter("P_DATE", p_DATE) :
                new ObjectParameter("P_DATE", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ADD_NEW_RECORD", p_YEARParameter, p_COSTParameter, p_AMOUNTParameter, p_SUPPLIER_IDParameter, p_DESCRIPTIONParameter, p_ARTIST_NAMEParameter, p_ALBUM_NAMEParameter, p_PICTUREParameter, p_STATUSParameter, p_DATEParameter);
        }
    
        public virtual int DELETE_RECORD(Nullable<decimal> p_ID)
        {
            var p_IDParameter = p_ID.HasValue ?
                new ObjectParameter("P_ID", p_ID) :
                new ObjectParameter("P_ID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DELETE_RECORD", p_IDParameter);
        }
    
        public virtual ObjectResult<FILTERBYCOST_Result> FILTERBYCOST()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FILTERBYCOST_Result>("FILTERBYCOST");
        }
    
        public virtual int FILTERBYIDASC()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("FILTERBYIDASC");
        }
    
        public virtual ObjectResult<FILTERBYYEAR_Result> FILTERBYYEAR()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FILTERBYYEAR_Result>("FILTERBYYEAR");
        }
    
        public virtual ObjectResult<GETALLCOMMENTS_Result> GETALLCOMMENTS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GETALLCOMMENTS_Result>("GETALLCOMMENTS");
        }
    
        public virtual ObjectResult<GETRECORDSINFO_Result> GETRECORDSINFO()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GETRECORDSINFO_Result>("GETRECORDSINFO");
        }
    
        public virtual int GETSONGSFORRECORD(Nullable<decimal> p_RECORD_ID, string p_SIDE)
        {
            var p_RECORD_IDParameter = p_RECORD_ID.HasValue ?
                new ObjectParameter("P_RECORD_ID", p_RECORD_ID) :
                new ObjectParameter("P_RECORD_ID", typeof(decimal));
    
            var p_SIDEParameter = p_SIDE != null ?
                new ObjectParameter("P_SIDE", p_SIDE) :
                new ObjectParameter("P_SIDE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GETSONGSFORRECORD", p_RECORD_IDParameter, p_SIDEParameter);
        }
    
        public virtual int GETSUPPLIERNAME(Nullable<decimal> p_RECORD_ID, Nullable<decimal> p_SUPPLIER_ID)
        {
            var p_RECORD_IDParameter = p_RECORD_ID.HasValue ?
                new ObjectParameter("P_RECORD_ID", p_RECORD_ID) :
                new ObjectParameter("P_RECORD_ID", typeof(decimal));
    
            var p_SUPPLIER_IDParameter = p_SUPPLIER_ID.HasValue ?
                new ObjectParameter("P_SUPPLIER_ID", p_SUPPLIER_ID) :
                new ObjectParameter("P_SUPPLIER_ID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GETSUPPLIERNAME", p_RECORD_IDParameter, p_SUPPLIER_IDParameter);
        }
    
        public virtual ObjectResult<GETUSERINFO_Result> GETUSERINFO()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GETUSERINFO_Result>("GETUSERINFO");
        }
    
        public virtual ObjectResult<GETUSERS_Result> GETUSERS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GETUSERS_Result>("GETUSERS");
        }
    
        public virtual int INSERT_GENRES(string p_GENRES)
        {
            var p_GENRESParameter = p_GENRES != null ?
                new ObjectParameter("P_GENRES", p_GENRES) :
                new ObjectParameter("P_GENRES", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INSERT_GENRES", p_GENRESParameter);
        }
    
        public virtual int INSERT_SONGS(string p_SONGS, string p_ARTIST_NAME, string p_ALBUM_NAME, string p_SIDE)
        {
            var p_SONGSParameter = p_SONGS != null ?
                new ObjectParameter("P_SONGS", p_SONGS) :
                new ObjectParameter("P_SONGS", typeof(string));
    
            var p_ARTIST_NAMEParameter = p_ARTIST_NAME != null ?
                new ObjectParameter("P_ARTIST_NAME", p_ARTIST_NAME) :
                new ObjectParameter("P_ARTIST_NAME", typeof(string));
    
            var p_ALBUM_NAMEParameter = p_ALBUM_NAME != null ?
                new ObjectParameter("P_ALBUM_NAME", p_ALBUM_NAME) :
                new ObjectParameter("P_ALBUM_NAME", typeof(string));
    
            var p_SIDEParameter = p_SIDE != null ?
                new ObjectParameter("P_SIDE", p_SIDE) :
                new ObjectParameter("P_SIDE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INSERT_SONGS", p_SONGSParameter, p_ARTIST_NAMEParameter, p_ALBUM_NAMEParameter, p_SIDEParameter);
        }
    
        public virtual int REDUCEAMOUNTOFRECORD(Nullable<decimal> p_ID, Nullable<decimal> p_REDUCEAMOUNT)
        {
            var p_IDParameter = p_ID.HasValue ?
                new ObjectParameter("P_ID", p_ID) :
                new ObjectParameter("P_ID", typeof(decimal));
    
            var p_REDUCEAMOUNTParameter = p_REDUCEAMOUNT.HasValue ?
                new ObjectParameter("P_REDUCEAMOUNT", p_REDUCEAMOUNT) :
                new ObjectParameter("P_REDUCEAMOUNT", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("REDUCEAMOUNTOFRECORD", p_IDParameter, p_REDUCEAMOUNTParameter);
        }
    
        public virtual int REGNEWUSER(Nullable<decimal> aPPCLIENTID, string aPPLOGIN, string aPPPASSWORD, string aPPPHONE, string aPPEMAIL, string aPPSEX, Nullable<System.DateTime> aPPDATEOFBIRTH)
        {
            var aPPCLIENTIDParameter = aPPCLIENTID.HasValue ?
                new ObjectParameter("APPCLIENTID", aPPCLIENTID) :
                new ObjectParameter("APPCLIENTID", typeof(decimal));
    
            var aPPLOGINParameter = aPPLOGIN != null ?
                new ObjectParameter("APPLOGIN", aPPLOGIN) :
                new ObjectParameter("APPLOGIN", typeof(string));
    
            var aPPPASSWORDParameter = aPPPASSWORD != null ?
                new ObjectParameter("APPPASSWORD", aPPPASSWORD) :
                new ObjectParameter("APPPASSWORD", typeof(string));
    
            var aPPPHONEParameter = aPPPHONE != null ?
                new ObjectParameter("APPPHONE", aPPPHONE) :
                new ObjectParameter("APPPHONE", typeof(string));
    
            var aPPEMAILParameter = aPPEMAIL != null ?
                new ObjectParameter("APPEMAIL", aPPEMAIL) :
                new ObjectParameter("APPEMAIL", typeof(string));
    
            var aPPSEXParameter = aPPSEX != null ?
                new ObjectParameter("APPSEX", aPPSEX) :
                new ObjectParameter("APPSEX", typeof(string));
    
            var aPPDATEOFBIRTHParameter = aPPDATEOFBIRTH.HasValue ?
                new ObjectParameter("APPDATEOFBIRTH", aPPDATEOFBIRTH) :
                new ObjectParameter("APPDATEOFBIRTH", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("REGNEWUSER", aPPCLIENTIDParameter, aPPLOGINParameter, aPPPASSWORDParameter, aPPPHONEParameter, aPPEMAILParameter, aPPSEXParameter, aPPDATEOFBIRTHParameter);
        }
    
        public virtual int UPDATE_GENRES(Nullable<decimal> p_ID, string p_GENRES)
        {
            var p_IDParameter = p_ID.HasValue ?
                new ObjectParameter("P_ID", p_ID) :
                new ObjectParameter("P_ID", typeof(decimal));
    
            var p_GENRESParameter = p_GENRES != null ?
                new ObjectParameter("P_GENRES", p_GENRES) :
                new ObjectParameter("P_GENRES", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UPDATE_GENRES", p_IDParameter, p_GENRESParameter);
        }
    
        public virtual int UPDATE_RECORD(Nullable<decimal> p_ID, Nullable<decimal> p_YEAR, Nullable<decimal> p_COST, Nullable<decimal> p_AMOUNT, string p_DESCRIPTION, string p_ARTIST_NAME, string p_ALBUM_NAME, string p_PICTURE, string p_STATUS, Nullable<System.DateTime> p_DATE)
        {
            var p_IDParameter = p_ID.HasValue ?
                new ObjectParameter("P_ID", p_ID) :
                new ObjectParameter("P_ID", typeof(decimal));
    
            var p_YEARParameter = p_YEAR.HasValue ?
                new ObjectParameter("P_YEAR", p_YEAR) :
                new ObjectParameter("P_YEAR", typeof(decimal));
    
            var p_COSTParameter = p_COST.HasValue ?
                new ObjectParameter("P_COST", p_COST) :
                new ObjectParameter("P_COST", typeof(decimal));
    
            var p_AMOUNTParameter = p_AMOUNT.HasValue ?
                new ObjectParameter("P_AMOUNT", p_AMOUNT) :
                new ObjectParameter("P_AMOUNT", typeof(decimal));
    
            var p_DESCRIPTIONParameter = p_DESCRIPTION != null ?
                new ObjectParameter("P_DESCRIPTION", p_DESCRIPTION) :
                new ObjectParameter("P_DESCRIPTION", typeof(string));
    
            var p_ARTIST_NAMEParameter = p_ARTIST_NAME != null ?
                new ObjectParameter("P_ARTIST_NAME", p_ARTIST_NAME) :
                new ObjectParameter("P_ARTIST_NAME", typeof(string));
    
            var p_ALBUM_NAMEParameter = p_ALBUM_NAME != null ?
                new ObjectParameter("P_ALBUM_NAME", p_ALBUM_NAME) :
                new ObjectParameter("P_ALBUM_NAME", typeof(string));
    
            var p_PICTUREParameter = p_PICTURE != null ?
                new ObjectParameter("P_PICTURE", p_PICTURE) :
                new ObjectParameter("P_PICTURE", typeof(string));
    
            var p_STATUSParameter = p_STATUS != null ?
                new ObjectParameter("P_STATUS", p_STATUS) :
                new ObjectParameter("P_STATUS", typeof(string));
    
            var p_DATEParameter = p_DATE.HasValue ?
                new ObjectParameter("P_DATE", p_DATE) :
                new ObjectParameter("P_DATE", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UPDATE_RECORD", p_IDParameter, p_YEARParameter, p_COSTParameter, p_AMOUNTParameter, p_DESCRIPTIONParameter, p_ARTIST_NAMEParameter, p_ALBUM_NAMEParameter, p_PICTUREParameter, p_STATUSParameter, p_DATEParameter);
        }
    
        public virtual int UPDATE_SONGS(Nullable<decimal> p_ID, string p_SONGS, string p_ARTIST_NAME, string p_ALBUM_NAME, string p_SIDE)
        {
            var p_IDParameter = p_ID.HasValue ?
                new ObjectParameter("P_ID", p_ID) :
                new ObjectParameter("P_ID", typeof(decimal));
    
            var p_SONGSParameter = p_SONGS != null ?
                new ObjectParameter("P_SONGS", p_SONGS) :
                new ObjectParameter("P_SONGS", typeof(string));
    
            var p_ARTIST_NAMEParameter = p_ARTIST_NAME != null ?
                new ObjectParameter("P_ARTIST_NAME", p_ARTIST_NAME) :
                new ObjectParameter("P_ARTIST_NAME", typeof(string));
    
            var p_ALBUM_NAMEParameter = p_ALBUM_NAME != null ?
                new ObjectParameter("P_ALBUM_NAME", p_ALBUM_NAME) :
                new ObjectParameter("P_ALBUM_NAME", typeof(string));
    
            var p_SIDEParameter = p_SIDE != null ?
                new ObjectParameter("P_SIDE", p_SIDE) :
                new ObjectParameter("P_SIDE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UPDATE_SONGS", p_IDParameter, p_SONGSParameter, p_ARTIST_NAMEParameter, p_ALBUM_NAMEParameter, p_SIDEParameter);
        }
    }
}
