#include <iostream>
using namespace std;

//Задание 11.1
//Задан массив A из n элементов. Проверить, есть ли в нём элементы, равные нулю. Если есть, найти наименьшее k, при котором A[k] = 0
//int main() {
//	setlocale(LC_ALL, "ru");
//	int n, k;
//	cout << "Введите размерность массива: ";
//	cin >> n;
//	int* A = new int[n];
//	for (int i = 0; i < n; i++) {
//		A[i] = rand() % 10;
//		if (A[i] == 0) {
//			k = i;
//		}
//	}
//	cout << "Исходный массив:\n" << "A[";
//	for (int i = 0; i < n; i++) {
//		if (i == n - 1) {
//			cout << A[i] << "]\n";
//		}
//		else {
//			cout << A[i] << ", ";
//		}
//	}
//	cout << "Наименьшее k(индекс), при котором A[k]=0: " << k;
//	delete[] A;
//}
//Задание 11.2
//Для заданной матрицы размером 4 на 4 найти такие k, при которых k-я строка матрицы совпадает с k-м столб-цом
//int main() {
//	setlocale(LC_ALL, "ru");
//	const int n = 4;
//	int A[n][n];
//	for (int i = 0; i < n; i++) {
//		for (int j = 0; j < n; j++) {
//			A[i][j] = rand() % 10;
//		}
//	}
//	cout << "Исходный массив:\n";
//	for (int i = 0; i < n; i++) {
//		for (int j = 0; j < n; j++) {
//			cout << "A[" << i << ", " << j << "] = " << A[i][j] << "\t";
//		}
//		cout << endl;
//	}
//	cout << "Элементы, у которых индекс строки совпадает с индексом столбца:\n";
//	for (int i = 0, j = 0; i < 4; i++, j++) {
//		cout << "B[" << i << ", " << j << "] = " << A[i][j] << "\t";
//	}
//}
//Задание 12.1
//Задан массив A из n элементов. Подсчитать, сколько раз встречается в нем максимальное число
//void main() {
//	setlocale(LC_ALL, "ru");
//	int n, count = 0;
//	cout << "Введите размерность массива: ";
//	cin >> n;
//	int* A = new int[n];
//	for (int i = 0; i < n; i++) {
//		A[i] = rand() % 10;
//		if (A[i] == 9) {
//			count++;
//		}
//	}
//	cout << "A[";
//	for (int i = 0; i < n; i++) {
//		if (i == n - 1) {
//			cout << A[i] << "]\n";
//		}
//		else {
//			cout << A[i] << ", ";
//		}
//	}
//	cout << "Максимальное число встречается " << count << " раз";
//	delete[] A;
//}
//Вариант 7.1
//Задан массив A из n элементов. Найти количество элементов этого массива, больших среднего арифметическо-го всех его элементов
//void main() {
//	setlocale(LC_ALL, "ru");
//	int n, sum = 0, count = 0;
//	cout << "Введите размерность массива: ";
//	cin >> n;
//	int* A = new int[n];
//	for (int i = 0; i < n; i++) {
//		A[i] = rand() % 10;
//		sum += A[i];
//	}
//	double avr = sum / n; //Почему тип int
//	cout << "Исходный массив:\n" << "A[";
//	for (int i = 0; i < n; i++) {
//		if (i == n - 1) {
//			cout << A[i] << "]\n";
//		}
//		else {
//			cout << A[i] << ", ";
//		}
//	}
//	cout << "Среднее арифметическое: " << avr << endl;
//	for (int i = 0; i < n; i++) {
//		if (A[i] > avr) {
//			count++;
//		}
//	}
//	cout << "Количество элементов, больших среднего арифметического: " << count;
//	delete[] A;
//}
//Задание 3.1
//В одномерном массиве, состоящем из n вещественных элементов, вычислить произведение 
//отрицательных элементов мас-сива и сумму положительных элементов массива, расположенных до максимального элемента
//void main() {
//	setlocale(LC_ALL, "ru");
//	int n, sum = 0, mult = 1;
//	cout << "Введите размерность массива: ";
//	cin >> n;
//	int* A = new int[n];
//	int maxE = A[0];
//	int maxI = A[0];
//	for (int i = 0; i < n; i++) {
//		A[i] = rand() % 10 - 3;
//	}
//	cout << "Исходный массив:\n" << "A[";
//	for (int i = 0; i < n; i++) {
//		if (i == n - 1) {
//			cout << A[i] << "]\n";
//		}
//		else {
//			cout << A[i] << ", ";
//		}
//	}
//	cout << "Максимальный элемент ";
//	for (int i = 0; i < n; i++) {
//		if (A[i] > maxE) {
//			maxE = A[i];
//			maxI = i;
//		}
//	}
//	cout << maxE << " находится под индексом " << maxI << endl;
//	for (int i = 0; i < maxI; i++) {
//		if (A[i] < 0) {
//			mult *= A[i];
//		}
//	}
//	for (int i = 0; i < maxI; i++) {
//		if (A[i] > 0) {
//			sum += A[i];
//		}
//	}
//	cout << "Сумма положительных чисел, находящихся до максимального элемента: " << sum << endl;
//	cout << "Произведение отрицательных чисел, находящихся до максимального элемента: " << mult << endl;
//	delete[] A;
//}