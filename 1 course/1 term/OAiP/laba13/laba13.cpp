#include <iostream>
#include <Windows.h>
#include <string>
#include <string.h>
#include <stdio.h>
#include <math.h>
using namespace std;

//Задание 2.1
//Написать программу, реализующую выделение подстроки S1 длиной k с позиции номер n из некоторой строки. 

int main() {
  SetConsoleCP(1251);
  SetConsoleOutputCP(1251);
  int k, n;
  char s[256], s1[256];
  cout << "Введите строку = "; 
  gets_s(s); //помещаем в буфер
  cout << "Введите длину строки k = "; cin >> k;
  cout << "Введите позицию n = "; cin >> n;
  cout << "Выделенное слово = ";
  for (int i = n - 1; i <= k + n - 2; i++) {
    cout << s[i];
  }
}

//Задание 2.2 НЕ НАДО
//Дана строка, состоящая из групп нулей и единиц. Определить самую короткую группу. 
//01011101011110

//int main() {
//    setlocale(LC_ALL, "Russian");
//    char s[100], * ps = s, ch, mch;
//    int mn = 100, n = 0;
//    cout << "Введите группу из нулей и единиц: ";
//    cin >> s;
//    ch = *ps;
//    do {
//        ++ps;
//        ++n;
//        if (ch != *ps) {
//            if (mn > n) {
//                mn = n;
//                mch = ch;
//            }
//            ch = *ps;
//            n = 0;
//        }
//    } while (*ps);
//    cout << "Самая короткая группа: ";
//    for (int c = 0; c < mn; ++c) cout << mch;
//    return 0;
//}
// 
//Задание 11.1
// Вывести текст, составленный из последних букв всех слов
 
int main()
{
    setlocale(LC_ALL, "Russian");
    string str = "";
    cout << "Введите строку: ";
    getline(cin, str); //getline - ввод данных из потока
    int n = str.length();
    for (int i = 0; i < n - 1; i++)
    {
        if (str[i] != ' ' && str[i + 1] == ' ')
        {
            cout << str[i];
        }
    }
    cout << str[str.length() - 1] << endl;
    
    system("pause");
}
//Задание 11.2 НЕ НАДО
// Дана строка символов, состоящая из произвольного текста, слова разделены пробелами. Найти порядко-вый номер слова максимальной длины и 
//номер позиции в строке, с которой оно начинается
//void main()
//{
//    char s[50];
//    int a[50], b[50];
//    int i, j, k, z, d, max;
//    gets(s);
//    d = strlen(s);
//    s[d] = ' ';
//    k = 0;
//    for (i = 0; i < d; i++)
//        if ((s[i] != ' ') && ((i == 0) || (s[i - 1] == ' ')))
//        {
//            j = i;
//            b[k] = i;
//            while (s[j] != ' ')
//            {
//                a[k]++; j++;
//            }
//            k++;
//        }
//    max = a[0];
//    for (i = 1; i < k; i++) if (a[i] > max)
//    {
//        max = a[i]; z = i;
//    }
//    cout << "nomer slova = " << z + 1 << ' ';
//    cout << "poziciya(otschet ot 0) = " << b[z] << ' ';
//}
//Задание 7.2
// Дана строка символов, состоящая из букв, цифр, запятых, точек, знаков «+» и «–». Найти количество цифр
//int main(void) {
//    char
//        st[100],                 //СТРОКА(ВВОДИТ ПОЛЬЗОВАТЕЛЬ)
//        tmp[100];                 //МАССИВ В КОТОРОМ НАКАПЛИВАЮТСЯ ЦИФРЫ(РЕЗУЛЬТАТ)
//    int n, i;                     //ДЛИННА СТРОКИ тмп
//    puts("Vvedite stroku");       //ВЫВОД СООБЩЕНИЯ ПОЛЬЗОВАТЕЛЮ
//    gets_s(st);                     //ПОЛУЧЕНИЕ СТРОКИ ОТ ПОЛЬЗОВАТЕЛЯ
//    for (i = 0, n = 0; st[i] != '\0'; i++)    //УВЕЛИЧИВАЕМ ПЕРЕМЕННУЮ i ПОКА НЕ ВСТРЕТИМ КОНЕЦ СТРОКИ,
//                                        //ВВЕДЕННОЙ ПОЛЬЗОВАТЕЛЕМ, ДЛЯ ИНДЕКСАЦИИ В ЭТОЙ СТРОКЕ 
//                                    //ИСПОЛЬЗУЕМ ПЕРЕМЕННУЮ i
//    if (st[i] >= '0' && st[i] <= '9')    //ИЩЕМ В МАССИВЕ stc i-ТЫЙ СИМВОЛ СТРОКИ ПОЛЬЗОВАТЕЛЯ
//          tmp[n++] = st[i];      //ДОБАВЛЯЕМ i-ТЫЙ СИМВОЛ СТРОКИ st К РЕЗУЛЬТАТУ
//                                //ДОПИСАТЬ \0 ЛУЧШЕ УЖЕ КОГДА РЕЗУЛЬТАТ ДО КОНЦА СФОРМИРОВАН
//                                //А НЕ В КАЖДОЙ ИТЕРАЦИИ, - БУДЕТ РАБОТАЬ БЫСТРЕЕ 
//    tmp[n] = 0;
//    puts(tmp);                  //ВЫВОД РЕЗУЛЬТАТА НЕ ЭКРАН
//    return 0;                   //ВОЗВРАЩАЕМ 0 - НАВЕРНО ОШИБОК НЕТ ))
//}


