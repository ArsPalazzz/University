1. Дайте понятие SVG? Как расшифровывается аббревиатура?
Масштабируемая векторная графика (Scalable Vector Graphics, SVG)
представляет собой вид графики, который создается с помощью
математического описания геометрических примитивов (линий, кругов,
эллипсов, прямоугольников, кривых), которые образуют изображение.

2. Какие премущества SVG перед остальными форматами?
К преимуществам SVG-изображений относится:
1. Отсутствие потери качестве при масштабировании.
2. Могут создаваться и редактироваться в любом текстовом редакторе
3. Совместимость со стандартами консорциума W3C: DOM и XSL.
4. Размеры их файлов являются небольшими по сравнению с любым
другим типом файлов изображений.
5. Можно добавлять несколько гиперссылок.
6. Поддержка скриптов и анимации в SVG позволяют создавать
динамичную и интерактивную графику

3. Как использовать SVG в HTML?
Вставка кода в HTML-документ в элементе <svg>...</svg>:
<svg xmlns="http://www.w3.org/2000/svg" version="1.1">
<!— SVG-код —>
</svg>

4. Каким образом создать прямую линию и ломанную линию?
Приямая линия:
<line "x1 — координата начальной точки линии по оси X;
y1 — координата начальной точки линии по оси Y;
x2 — координата начальной точки линии по оси X;
y2 — координата начальной точки линии по оси Y">
Кривая линия:
<polyline points — координаты ломанной линии парами x,y через пробел">

5. Каким образом создать прямоугольник и многоугольник?
Многоугольник
<polygon points — координаты ломанной линии парами x,y через пробел>
Прямоугольник
<rect x — координата левой верхней точки прямоугольника по оси X;
y — Координата левой верхней точки прямоугольника по оси Y;
width — ширина прямоугольника;
height — высота прямоугольника;
rx — радиус закругления углов прямоугольника по оси X;
ry — радиус закругления углов прямоугольника по оси Y>

6. Каким образом создать круг и эллипс?
Круг
<circle cx — координата центра круга по оси X;
cy — координата центра круга по оси Y;
r — радиус круга;>
Эллипс
<ellipse cx — координата центра эллипса по оси X;
cy — координата центра эллипса по оси Y;
rx — радиус эллипса по оси X;
ry — радиус эллипса по оси Y;>

7. Для чего предназначен тег <path>?
Создание сложной траектории задается тегом <path>, который
позволяет создавать произвольные фигуры. Форма фигуры задается
атрибутом d, значение которого — это набор специальных команд. Эти
команды могут быть и в верхнем, и в нижнем регистре. Верхний регистр
указывает на то, что применяется абсолютное позиционирование, а нижний –
относительное.

8. Что означают значения в теге <path>?
Форма фигуры задается атрибутом d, значение которого — это набор специальных команд.

9. Какие атрибуты относятся к общим?
К общим атрибутам используемым во всех элементах относятся:
1. stroke — цвет линии;
2. stroke-width — толщина линии;
3. stroke-linecap — стиль концов линии. Возможные значения атрибута:
round – по форме круга; square – по форме квадрата;
4. stroke-dasharray — Чередование штрихов и пробелов в пунктирной
линии;
5. fill — цвет заливки (none – без заливки);
6. fill-opacity — прозрачность заливки (от 0 до 1);
7. fill-rule — правило заливки. Возможные значения атрибута:
nonzero — сплошная заливка; evenodd – внутренняя часть фигуры не
заливается.
8. style — стиль элемента;
9. class — класс элемента.

10. Как создать заливку svg-фигуры?
fill — цвет заливки (none – без заливки);

11. Как изменить цвет линии или контура svg-фигуры?
stroke — цвет линии;

12. Как изменить цвет толщины контура svg-фигуры?
stroke-width — толщина линии;

13. Каким образом преобразовать svg-фигуру?
Преобразования задаются в атрибуте transform SVG-элемента. Можно
указать несколько пребразований через пробел. Виды трансформации:
1. rotate(rotate-angle [cx cy]) – поворот;
2. scale(sx [sy]) – масштабирование;
3. translate(tx [ty]) – перенос;
4. skewX(skew-angle) – наклон по оси X;
5. skewY(skew-angle) – наклон по оси Y.

14. Для чего используется тег <use>?
Для
создания копий svg-фигур и их размещения на странице, а также
добавления различных преобразований используется тег <use>, указывается
id контура и прописываются его координаты.

15. Каким образом использовать графические редакторы для создания
svg?
Создать фигуру в графическом редакторе, сохранить в формате .svg, открыть через текстовый редактор и скопировать код.

16. Каким образом создать текст в svg?
<text>

17. Для чего используется тег <defs>?
В теге <defs> (бибиотека элементов и эффектов) можно задать
градиентную заливку (linearGradient, radialGradient) и применить ее к
отдельным фигурам.

18. Каким образом создать градиентную заливку?
<linearGradient id = “MyGradient”>
<stop offset = “30%” stop-color = “red”/>
<stop offset = “70%” stop-color = “yellow”/>
</linearGradient>

19. Каким образом создать анимацию?
С помощью тега <animate>, который анимирует отдельные свойства, прописываемые
непосредственно в теге фигуры с указанием анимированного свойства в
атрибуте attributeName.

20. Какие атрибуты могут быть использованы при создании анимации?
<animate attributeName="cx" from="100" to="300" dur="5s"
begin="click" fill="freeze">

21. Как использовать обработчики событий при анимации svg?
Для обработки событий можно воспользоваться тегами анимации с
атрибутами begin и end: begin="mousedown", end="mouseup",
begin="mouseover".

22. Каким образом используется Sass при создании таблиц стилей?
Sass – это язык и препроцессор каскадных таблиц стилей, добавляющий в CSS традиционные атрибуты программирования.
В Sass реализован ряд возможностей программирования, включая переменные, логическую вложенность стилей,
аргументы и наследование.

23. Для чего используется viewBox?
Контейнер SVG документа имеет бесконечные размеры. Viewport и
viewBox – это две прямоугольные области просмотра, которые ограничены
конечными значениями высоты и ширины, указанными в параметрах viewport
и viewBox.

24. Для чего используется тег <g>
Часто используется парный тег: <g> для объединения нескольких
фигур в группу для последующих действий над ней, как над одним целым,
например для: перемещения, поворота, масштабирования и т.д.
