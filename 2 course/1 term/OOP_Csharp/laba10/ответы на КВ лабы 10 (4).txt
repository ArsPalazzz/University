1. Что такое LINQ?
- LINQ - язык интегрированных запросов. представляет собой простой и удобный язык запросов к 
  источнику данных. В качестве источника данных может выступать объект, реализующий интерфейс 
  IEnumerable, документ XML. Но вне зависимости от типа источника LINQ позволяет применить ко 
  всем один и тот же подход для выборки данных.

2. В чем разница между отложенными операциями и не отложенными 
операциями LINQ to Object?
- Не отложенный выполняется сразу, а отложенный только когда с ним взаимодействуют
- При отложенном выполнении LINQ-выражение не выполняется, пока не будет произведена итерация 
  или перебор по выборке, например, в цикле foreach. Обычно подобные операции возвращают объект 
  IEnumerable<T> или IOrderedEnumerable<T>
- Пр., AsEnumerable Cast Concat Distinct Except GroupBy GroupJoin Intersect Join
- Не отложенные операции - Это методы, которые возвращают одно атомарное значение или один 
  элемент или данные типов Array List и Dictionary. Полный список подобных операций в LINQ:
  Aggregate All Any Average Contains

3. Что такое лямбда-выражения? 
- методы, не имеющие имени. Они называются анонимными, потому что в отличие от обычных методов, 
  у них нет имён.

4. Какие есть группы операции в LINQ to Object? Перечислите
- Виды LINQ:
LINQ to Objects: применяется для работы с массивами и коллекциями
LINQ to XML: применяется при работе с файлами XML
LINQ to DataSet: применяется при работе с объектом DataSet
LINQ to SQL: прим-ся при работе с SQL
LINQ to Entities: используется при обращении к базам данных через технологию Entity Framework
Parallel LINQ: используется для выполнения параллельных запросов

- Виды операций:
Агрегация (Count, Min, Max)
Преобразование (Cast, ofType, ToArray, ToList, ToDictionary)
Конкатенация (Concat)
Элемент (Last, First, Single , ElemetAt+ Default)
Множество (Except, Distinct, Union)
Генерация (Empty, Range, Repeat)
Соединение (Join, GroupJoin)
Упорядочивание (OrderBy, ThenBy, Reverse,….)
Проекция (Select, SelectMany)
Разбиение (Skip, Take , +While)
Ограничение (Where)
Квантификатор (Any, All, Contains)
Эквивалентность(SequeceEqual)

5. Как используется операция Where в LINQ to Object?
- условие

6. Как используется операция Select ?
- выбор (оператор проекций)

7. Как используются операции Take, Skip?
- Выбрать инное, Пропустьть инное
- Метод Skip() пропускает определенное количество элементов, ктр. передается в кач. пар. в метод:
  string[] people = { "Tom", "Sam", "Bob", "Mike", "Kate" };
  // пропускаем первые два элемента
  var result = people.Skip(2);    // "Bob", "Mike", "Kate"
- Метод Take() аналогичен Skip() за исключением того, что мы уже берем а не пропускаем зн-я

8. Как используется операция Concat ?
- // объединение последовательностей
  var people = students.Concat(employees);

9. Как используется операция OrderBy?
- сортировка

10. Как используется операция Join?
- Соединение (join) в LINQ используется для объединения двух разнотипных наборов в один

11. Как используются операции Distinct, Union, Except и Intersect?
- Для объединения двух последовательностей используется метод Union.
- Для удаления дублей в наборе используется метод Distinct
- С помощью метода Except() можно получить разность двух последовательностей
- Для получения пересечения последовательностей, то есть общих для обоих наборов элементов, 
  применяется метод Intersect

12. Как используются операции First, Last, Any, All и Contains?
- All() проверяет, соответствуют ли все элементы коллекции условию
- Метод Any() действует подобным образом, только возвращает true, если хотя бы один элемент 
  коллекции соответствует определенному условию
- Метод Contains() возвращает true, если коллекция содержит определенный элемент
- First() возвращает первый элемент последовательности:
- Last() возвращает последний элемент

13. Как используются операции Count, Sum, Min и Max, Average? 
- .Max(условие)
- Для получения числа элементов в выборке используется метод Count():
- Для получения суммы значений применяется метод Sum:
- Для нахождения минимального значения применяется метод Min()
- Для получения максимального - метод Max()
- нахождения среднего значения - метод Average()

14. Что выведет на экран данный код?
class Test
 {
 public static void Main()
 {
 List<int> list = new List<int>();
 list.AddRange(new int[] { 3, 1, 4, 8, 10, 4 });
 
 List<int> some = list.FindAll(i => (i>=9));
 foreach (int x in some)
 Console.Write(x);
 }
 }

- 10

15. Что такое итераторы и оператор yield
- Итераторы тоже самое что и перечислители, то есть нужны для поочередного перечисления объектов
  коллекции и обладающие оператором yield. Он сохраняет текущее местоположение, с которого
  будет начинаться следующая итерация