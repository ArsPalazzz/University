0. Что такое коллекция?
- В C# коллекция представляет собой совокупность объектов, которые реализуются специальными
  встроенными интерфейсами

1. На какие основные виды/типы делятся все коллекции .NET? Охарактеризуйте 
каждый из них.
- Все коллекции в .Net делятся на 5 видов:
  1) Необобщенные хранят такие коллекции, как дин. массивы, очереди, списки, ... Так как
     они хранят ссылку на объект, то они не явл-ся типизированными. System.Collections
  2) Специальные исп-ют данные конкретного типа. Пр., коллекции для симв. строк или однонапр-й
     список. System.Collections.Specialized
  3) С поразрядной реализацией содержат коллекции оперирующие битовыми операциями. 
     System.Collections
  4) Обобщенные такие же как и необобщ., но они параметризованы. System.Collections.Generic
  5) Параллельные поддерживают многопоточный доступ к коллекции. System.Collections.Concurrent

2. Что такое generic-коллекции? Назовите примеры известных вам genericколлекций. 
- Обобщенные коллекции являются типизированными, что означает, что они должны иметь такие
  типа данных, которые будут совместимы по типу коллекции
- списки, стек, очереди, словари

3. В чем разница между ArrayList и Array?
- Основное различие между Array и ArrayList состоит в том, что Array является структурой 
  данных фиксированной длины, а ArrayList является классом Collection переменной длины. 
  Вкратце, Array имеет статическую природу, тогда как ArrayList имеет динамическую природу.

4. Чем отличаются коллекции, расположенные в пространстве имен 
   System.Collections.Concurrent?
- Классические коллекции спроектированы с прицелом на максимальную производительность, 
  поэтому их экземплярные методы не гарантируют потокобезопасность.

5. Какое пространство имен необходимо подключить в проект, чтобы иметь 
   возможность использовать generic-коллекции?
- System.Collections.Generic

6. Что такое наблюдаемая коллекция? Как ее можно использовать? 
- Она похожа на List, с отличием в том, что она может давать внешним объектом информацию
  что коллекция изменилась.

7. Охарактеризуйте интерфейсы IEnumerator, IEnumerable. В чем отличие 
   назначений интерфейсов IEnumerator и IEnumerable
- Перечислитель обеспечивает стандартный способ поочередного доступа к элементам коллекции.
  Следовательно, он перечисляет содержимое коллекции. Благодаря такой реализации мы можем 
  перебирать объекты в цикле foreach
- Интерфейс IEnumerable имеет метод, возвращающий ссылку на другой интерфейс - перечислитель:
  public interface IEnumerable
  {
     IEnumerator GetEnumerator();
  }

- А интерфейс IEnumerator определяет функционал для перебора внутренних объектов в контейнере:
  public interface IEnumerator
  {
     bool MoveNext(); // перемещение на одну позицию вперед в контейнере элементов
     object Current {get;}  // текущий элемент в контейнере
     void Reset(); // перемещение в начало контейнера
  }

8. Охарактеризуйте следующие встроенные коллекции:
  1) Класс LinkedList<T> представляет двухсвязный список, в котором каждый элемент хранит ссылку 
     одновременно на следующий и на предыдущий элемент.
  2) HashSet<T> класс можно рассматривать как коллекцию без значений Dictionary<TKey,TValue> .
     Коллекция HashSet<T> не отсортирована и не может содержать повторяющиеся элементы
  3) Dictionary <Tkey, TValue> - набор ключ-значений
  4) ConcurrentBag <Tkey, TValue> - Представляет потокобезопасную неупорядоченную 
     коллекцию объектов
  5) Stack<t> - Класс Stack<T> представляет коллекцию, которая использует алгоритм LIFO 
     ("последний вошел - первый вышел"). При такой организации каждый следующий добавленный 
     элемент помещается поверх предыдущего. Извлечение из коллекции происходит в обратном 
     порядке - извлекается тот элемент, который находится выше всех в стеке.
  6) Queue<T> - Класс Queue<T> представляет обычную очередь, которая работает по алгоритму 
     FIFO ("первый вошел - первый вышел").
  7) SortedList - В C# SortedList представляет собой коллекцию пар "ключ-значение", которые 
     сортируются по ключам. По умолчанию эта коллекция сортирует пары "ключ-значение" в порядке 
     возрастания.

9. Чем отличается Set от List?
- тем что set все уникальные значения

10. Рассказать про иерархию наследования коллекций?
- Сначала есть интерфейс IEnumerable, IEnumenator -> ICollection (содержит методы добавления, 
  удаления, очистки, ...) -> IDictionary, IList, ...

ienumetable, ienumerator, icollection, ilist(ihash, idictionary)

  